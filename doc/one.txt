程序是如何开始称为可执行文件的？

程序经过编译链接装载可以在计算机中运行;

下面简单的介绍程序称为可执行文件的过程：
预处理--->编译---->汇编----->链接 +++++>装载====运行
预处理：展开所有的宏定义，处理所有的预处理的指令，删除注释
编译：把预处理文件进行词法分析，语法分析，语义分析......形成汇编文件
汇编：根据汇编指令和机器指令的对应表翻译成可执行的指令
链接：将目标文件连接成可执行文件。合并相同段，进行重定位;

可执行文件只有在操作系统的操作下装载到内存中，才能运行


程序是从哪开始执行的？
1：当我们运行一个程序，程序显式的从main函数开始执行，而不是从其他的函数开始执行？原因是当一个程序开始执行的时候，
操作系统并不知道从那个function开始执行，但是对于glibc而言，链接器（ld）指定了函数的入口函数，可是使用ld --verbose参数
查看ld的指定的入口函数。
2：首先我们先来写链接脚本：我们自己可以指定函数的入口名字，对应段的虚拟地址，就是在32为机器下为什么虚拟地址是从
0x08048000开始的，就是由于链接器在链接可执行文件的使用的链接脚本中其实的段基地址就是0x8048000,当然我们也可以修改它的值
但是我们不建议这样做;

我们可是使用gcc -nostdlib -fno-builtin -share -fPIC  -c ctr_start.c 来编译我们的我们的文件
然后我们

